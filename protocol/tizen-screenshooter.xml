<?xml version="1.0" encoding="UTF-8"?>
<protocol name="tizen_screenshooter">

	<interface name="tizen_screenshooter" version="1">
		<description summary="interface for tizen-screenshooter">
		Clients can get a screenmirror object from this interface.
		</description>

		<request name="get_screenmirror">
			<description summary="create a screenmirror object">
			Before using screenmirror, a client should get a screenmirror object from display
			server.
			</description>
			<arg name="id" type="new_id" interface="tizen_screenmirror" summary="new screenmirror object"/>
			<arg name="output" type="object" interface="wl_output" summary="output object for screenmirror"/>
		</request>
	</interface>

	<interface name="tizen_screenmirror" version="1">
		<description summary="interface for screenmirror">
		A client can use this interface to get stream images of screen. Before starting,
		queue all buffers. Then, start a screenmirror. After starting, a dequeued event
		will occur when drawing a captured image on a buffer is finished. You might
		need to queue the dequeued buffer again to get a new image from display server.
		</description>

		<request name="destroy" type="destructor">
		</request>
		<request name="set_stretch">
			<arg name="stretch" type="uint" summary="stretch type for screenmirror"/>
		</request>
		<request name="queue">
			<description summary="queue a buffer"/>
			<arg name="buffer" type="object" interface="wl_buffer" summary="buffer object for screenmirror"/>
		</request>
		<request name="dequeue">
			<description summary="dequeue a buffer">
			A user can dequeue a buffer from display server when he wants to take back it from server.
			</description>
			<arg name="buffer" type="object" interface="wl_buffer" summary="buffer object for screenmirror"/>
		</request>
		<request name="start">
		</request>
		<request name="stop">
		</request>

		<enum name="content">
			<entry name="normal" value="0"/>
			<entry name="video" value="1"/>
		</enum>

		<enum name="stretch">
			<entry name="keep_ratio" value="0"/>
			<entry name="fully" value="1"/>
		</enum>

		<event name="dequeued">
			<description summary="dequeued event">
			occurs when drawing a captured image on a buffer is finished
			</description>
			<arg name="buffer" type="object" interface="wl_buffer" summary="dequeued buffer which contains a captured image"/>
		</event>
		<event name="content">
			<description summary="content changed event">
			occurs when the content of a captured image is changed. (normal or video)
			</description>
			<arg name="content" type="uint"/>
		</event>
		<event name="stop">
			<description summary="stop event">
			occurs when the screenmirror is stopped eventually
			</description>
		</event>
	</interface>

</protocol>
